# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy CAP BTP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.os}}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{runner.os}}-node_modules
      
      - name: Install dependencies
        run: npm install

      - name: Install MBT
        run: npm install -g mbt
      
      - name: Built MTA
        run: npm run build
        if: github.ref == 'refs/heads/main'
      
  # deploy to BTP
  deploy_main:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          kye: ${{runner.os}}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{runner.os}}-node_modules
      
      - name: Install dependencies
        run: npm install
      
      - name: Install MBT
        run: npm install -g mbt
      
      - name: Built MTA
        run: npm run build
        if: github.ref == 'refs/heads/main'

      - name: Deploy to CF
        uses: evandropizaniramos/cf8-cli-action@v0.0.4
        with:
          cf_api: ${{ secrets.CF_API }}
          cf_user: ${{ secrets.CF_USER }}
          cf_pwd: ${{ secrets.CF_PWD }}
          cf_org: ${{ secrets.CF_ORG }}
          cf_space: ${{ secrets.CF_SPACE }}
          cf_command: deploy ./mta_archives/testingCAP.mtar -f --retries 3